// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/cmd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RemotePadDriver {

  /// <summary>Holder for reflection information generated from proto/cmd.proto</summary>
  public static partial class CmdReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/cmd.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CmdReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9wcm90by9jbWQucHJvdG8SBmNvbW1vbiLfAQoERGF0YRIcCgNjbWQYASAB",
            "KA4yDy5jb21tb24uQ21kVHlwZRIKCgJpZBgCIAEoCRIgCgdtc2dUeXBlGAMg",
            "ASgOMg8uY29tbW9uLk1zZ1R5cGUSCgoCdG8YBCABKAkSHAoFaGVsbG8YBSAB",
            "KAsyDS5jb21tb24uSGVsbG8SGgoEcGluZxgGIAEoCzIMLmNvbW1vbi5QaW5n",
            "EiAKB3BhZFR5cGUYByABKA4yDy5jb21tb24uUGFkVHlwZRIjCgdwYWREYXRh",
            "GAggASgLMhIuY29tbW9uLlBhZEJ0bkRhdGEiXwoFSGVsbG8SDQoFZ3JvdXAY",
            "ASABKAkSCgoCaWQYAiABKAkSDAoEbmFtZRgDIAEoCRILCgNtc2cYBCABKAkS",
            "EQoJc2VydmVyTXNnGAUgASgJEg0KBW9yZGVyGAYgASgIIhQKBFBpbmcSDAoE",
            "dGltZRgBIAEoAyI9CgpQYWRCdG5EYXRhEh8KB2J0blR5cGUYASABKA4yDi5j",
            "b21tb24uUGFkQnRuEg4KBmJ0blZhbBgCIAEoBSpCCgdDbWRUeXBlEgsKB1Rf",
            "SGVsbG8QABIKCgZUX1BpbmcQARIOCgpUX1BhZF9UeXBlEAISDgoKVF9QYWRf",
            "RGF0YRADKioKB01zZ1R5cGUSCgoGU2VydmVyEAASCgoGRHJpdmVyEAESBwoD",
            "UGFkEAIqHwoHUGFkVHlwZRIHCgNEUzQQABILCgdYYm94MzYwEAEq1QEKBlBh",
            "ZEJ0bhIFCgFBEAASBQoBQhABEgUKAVkQAhIFCgFYEAMSBgoCTEIQBBIGCgJS",
            "QhAFEgYKAkwzEAYSBgoCUjMQBxIJCgVTdGFydBAIEgoKBlNlbGVjdBAJEggK",
            "BFhib3gQChIGCgJMMhALEgYKAlIyEAwSBwoDTEFYEA0SBwoDTEFZEA4SBwoD",
            "UkFYEA8SBwoDUkFZEBASBwoDRFVQEBESCQoFRERPV04QEhIJCgVETEVGVBAT",
            "EgoKBkRSSUdIVBAUEg8KC0RTNFRvdWNoUGFkEBVCKQoSY24ubWlzYWthbmV0",
            "LnByb3RvWgdjb21tb24vqgIJUmVtb3RlUGFkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RemotePadDriver.CmdType), typeof(global::RemotePadDriver.MsgType), typeof(global::RemotePadDriver.PadType), typeof(global::RemotePadDriver.PadBtn), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RemotePadDriver.Data), global::RemotePadDriver.Data.Parser, new[]{ "Cmd", "Id", "MsgType", "To", "Hello", "Ping", "PadType", "PadData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemotePadDriver.Hello), global::RemotePadDriver.Hello.Parser, new[]{ "Group", "Id", "Name", "Msg", "ServerMsg", "Order" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemotePadDriver.Ping), global::RemotePadDriver.Ping.Parser, new[]{ "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemotePadDriver.PadBtnData), global::RemotePadDriver.PadBtnData.Parser, new[]{ "BtnType", "BtnVal" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CmdType {
    [pbr::OriginalName("T_Hello")] THello = 0,
    [pbr::OriginalName("T_Ping")] TPing = 1,
    [pbr::OriginalName("T_Pad_Type")] TPadType = 2,
    [pbr::OriginalName("T_Pad_Data")] TPadData = 3,
  }

  public enum MsgType {
    [pbr::OriginalName("Server")] Server = 0,
    [pbr::OriginalName("Driver")] Driver = 1,
    [pbr::OriginalName("Pad")] Pad = 2,
  }

  public enum PadType {
    [pbr::OriginalName("DS4")] Ds4 = 0,
    [pbr::OriginalName("Xbox360")] Xbox360 = 1,
  }

  public enum PadBtn {
    [pbr::OriginalName("A")] A = 0,
    [pbr::OriginalName("B")] B = 1,
    [pbr::OriginalName("Y")] Y = 2,
    [pbr::OriginalName("X")] X = 3,
    [pbr::OriginalName("LB")] Lb = 4,
    [pbr::OriginalName("RB")] Rb = 5,
    [pbr::OriginalName("L3")] L3 = 6,
    [pbr::OriginalName("R3")] R3 = 7,
    [pbr::OriginalName("Start")] Start = 8,
    [pbr::OriginalName("Select")] Select = 9,
    [pbr::OriginalName("Xbox")] Xbox = 10,
    [pbr::OriginalName("L2")] L2 = 11,
    [pbr::OriginalName("R2")] R2 = 12,
    [pbr::OriginalName("LAX")] Lax = 13,
    [pbr::OriginalName("LAY")] Lay = 14,
    [pbr::OriginalName("RAX")] Rax = 15,
    [pbr::OriginalName("RAY")] Ray = 16,
    [pbr::OriginalName("DUP")] Dup = 17,
    [pbr::OriginalName("DDOWN")] Ddown = 18,
    [pbr::OriginalName("DLEFT")] Dleft = 19,
    [pbr::OriginalName("DRIGHT")] Dright = 20,
    [pbr::OriginalName("DS4TouchPad")] Ds4TouchPad = 21,
  }

  #endregion

  #region Messages
  public sealed partial class Data : pb::IMessage<Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemotePadDriver.CmdReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data(Data other) : this() {
      cmd_ = other.cmd_;
      id_ = other.id_;
      msgType_ = other.msgType_;
      to_ = other.to_;
      hello_ = other.hello_ != null ? other.hello_.Clone() : null;
      ping_ = other.ping_ != null ? other.ping_.Clone() : null;
      padType_ = other.padType_;
      padData_ = other.padData_ != null ? other.padData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data Clone() {
      return new Data(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private global::RemotePadDriver.CmdType cmd_ = global::RemotePadDriver.CmdType.THello;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.CmdType Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 3;
    private global::RemotePadDriver.MsgType msgType_ = global::RemotePadDriver.MsgType.Server;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.MsgType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 4;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hello" field.</summary>
    public const int HelloFieldNumber = 5;
    private global::RemotePadDriver.Hello hello_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.Hello Hello {
      get { return hello_; }
      set {
        hello_ = value;
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 6;
    private global::RemotePadDriver.Ping ping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.Ping Ping {
      get { return ping_; }
      set {
        ping_ = value;
      }
    }

    /// <summary>Field number for the "padType" field.</summary>
    public const int PadTypeFieldNumber = 7;
    private global::RemotePadDriver.PadType padType_ = global::RemotePadDriver.PadType.Ds4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.PadType PadType {
      get { return padType_; }
      set {
        padType_ = value;
      }
    }

    /// <summary>Field number for the "padData" field.</summary>
    public const int PadDataFieldNumber = 8;
    private global::RemotePadDriver.PadBtnData padData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.PadBtnData PadData {
      get { return padData_; }
      set {
        padData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (Id != other.Id) return false;
      if (MsgType != other.MsgType) return false;
      if (To != other.To) return false;
      if (!object.Equals(Hello, other.Hello)) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (PadType != other.PadType) return false;
      if (!object.Equals(PadData, other.PadData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd != global::RemotePadDriver.CmdType.THello) hash ^= Cmd.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (MsgType != global::RemotePadDriver.MsgType.Server) hash ^= MsgType.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (hello_ != null) hash ^= Hello.GetHashCode();
      if (ping_ != null) hash ^= Ping.GetHashCode();
      if (PadType != global::RemotePadDriver.PadType.Ds4) hash ^= PadType.GetHashCode();
      if (padData_ != null) hash ^= PadData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cmd != global::RemotePadDriver.CmdType.THello) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Cmd);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (MsgType != global::RemotePadDriver.MsgType.Server) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MsgType);
      }
      if (To.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(To);
      }
      if (hello_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Hello);
      }
      if (ping_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Ping);
      }
      if (PadType != global::RemotePadDriver.PadType.Ds4) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PadType);
      }
      if (padData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PadData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cmd != global::RemotePadDriver.CmdType.THello) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Cmd);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (MsgType != global::RemotePadDriver.MsgType.Server) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MsgType);
      }
      if (To.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(To);
      }
      if (hello_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Hello);
      }
      if (ping_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Ping);
      }
      if (PadType != global::RemotePadDriver.PadType.Ds4) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PadType);
      }
      if (padData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PadData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd != global::RemotePadDriver.CmdType.THello) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cmd);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (MsgType != global::RemotePadDriver.MsgType.Server) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (hello_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hello);
      }
      if (ping_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (PadType != global::RemotePadDriver.PadType.Ds4) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PadType);
      }
      if (padData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PadData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      if (other.Cmd != global::RemotePadDriver.CmdType.THello) {
        Cmd = other.Cmd;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.MsgType != global::RemotePadDriver.MsgType.Server) {
        MsgType = other.MsgType;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.hello_ != null) {
        if (hello_ == null) {
          Hello = new global::RemotePadDriver.Hello();
        }
        Hello.MergeFrom(other.Hello);
      }
      if (other.ping_ != null) {
        if (ping_ == null) {
          Ping = new global::RemotePadDriver.Ping();
        }
        Ping.MergeFrom(other.Ping);
      }
      if (other.PadType != global::RemotePadDriver.PadType.Ds4) {
        PadType = other.PadType;
      }
      if (other.padData_ != null) {
        if (padData_ == null) {
          PadData = new global::RemotePadDriver.PadBtnData();
        }
        PadData.MergeFrom(other.PadData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cmd = (global::RemotePadDriver.CmdType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            MsgType = (global::RemotePadDriver.MsgType) input.ReadEnum();
            break;
          }
          case 34: {
            To = input.ReadString();
            break;
          }
          case 42: {
            if (hello_ == null) {
              Hello = new global::RemotePadDriver.Hello();
            }
            input.ReadMessage(Hello);
            break;
          }
          case 50: {
            if (ping_ == null) {
              Ping = new global::RemotePadDriver.Ping();
            }
            input.ReadMessage(Ping);
            break;
          }
          case 56: {
            PadType = (global::RemotePadDriver.PadType) input.ReadEnum();
            break;
          }
          case 66: {
            if (padData_ == null) {
              PadData = new global::RemotePadDriver.PadBtnData();
            }
            input.ReadMessage(PadData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cmd = (global::RemotePadDriver.CmdType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            MsgType = (global::RemotePadDriver.MsgType) input.ReadEnum();
            break;
          }
          case 34: {
            To = input.ReadString();
            break;
          }
          case 42: {
            if (hello_ == null) {
              Hello = new global::RemotePadDriver.Hello();
            }
            input.ReadMessage(Hello);
            break;
          }
          case 50: {
            if (ping_ == null) {
              Ping = new global::RemotePadDriver.Ping();
            }
            input.ReadMessage(Ping);
            break;
          }
          case 56: {
            PadType = (global::RemotePadDriver.PadType) input.ReadEnum();
            break;
          }
          case 66: {
            if (padData_ == null) {
              PadData = new global::RemotePadDriver.PadBtnData();
            }
            input.ReadMessage(PadData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hello : pb::IMessage<Hello>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hello> _parser = new pb::MessageParser<Hello>(() => new Hello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemotePadDriver.CmdReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello(Hello other) : this() {
      group_ = other.group_;
      id_ = other.id_;
      name_ = other.name_;
      msg_ = other.msg_;
      serverMsg_ = other.serverMsg_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello Clone() {
      return new Hello(this);
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 1;
    private string group_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Group {
      get { return group_; }
      set {
        group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 4;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverMsg" field.</summary>
    public const int ServerMsgFieldNumber = 5;
    private string serverMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerMsg {
      get { return serverMsg_; }
      set {
        serverMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 6;
    private bool order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Group != other.Group) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Msg != other.Msg) return false;
      if (ServerMsg != other.ServerMsg) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Group.Length != 0) hash ^= Group.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (ServerMsg.Length != 0) hash ^= ServerMsg.GetHashCode();
      if (Order != false) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Group.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Group);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Msg);
      }
      if (ServerMsg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServerMsg);
      }
      if (Order != false) {
        output.WriteRawTag(48);
        output.WriteBool(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Group.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Group);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Msg);
      }
      if (ServerMsg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServerMsg);
      }
      if (Order != false) {
        output.WriteRawTag(48);
        output.WriteBool(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Group.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (ServerMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerMsg);
      }
      if (Order != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hello other) {
      if (other == null) {
        return;
      }
      if (other.Group.Length != 0) {
        Group = other.Group;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.ServerMsg.Length != 0) {
        ServerMsg = other.ServerMsg;
      }
      if (other.Order != false) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Group = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Msg = input.ReadString();
            break;
          }
          case 42: {
            ServerMsg = input.ReadString();
            break;
          }
          case 48: {
            Order = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Group = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Msg = input.ReadString();
            break;
          }
          case 42: {
            ServerMsg = input.ReadString();
            break;
          }
          case 48: {
            Order = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Ping : pb::IMessage<Ping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemotePadDriver.CmdReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping(Ping other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping Clone() {
      return new Ping(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PadBtnData : pb::IMessage<PadBtnData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PadBtnData> _parser = new pb::MessageParser<PadBtnData>(() => new PadBtnData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PadBtnData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemotePadDriver.CmdReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PadBtnData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PadBtnData(PadBtnData other) : this() {
      btnType_ = other.btnType_;
      btnVal_ = other.btnVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PadBtnData Clone() {
      return new PadBtnData(this);
    }

    /// <summary>Field number for the "btnType" field.</summary>
    public const int BtnTypeFieldNumber = 1;
    private global::RemotePadDriver.PadBtn btnType_ = global::RemotePadDriver.PadBtn.A;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemotePadDriver.PadBtn BtnType {
      get { return btnType_; }
      set {
        btnType_ = value;
      }
    }

    /// <summary>Field number for the "btnVal" field.</summary>
    public const int BtnValFieldNumber = 2;
    private int btnVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BtnVal {
      get { return btnVal_; }
      set {
        btnVal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PadBtnData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PadBtnData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BtnType != other.BtnType) return false;
      if (BtnVal != other.BtnVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BtnType != global::RemotePadDriver.PadBtn.A) hash ^= BtnType.GetHashCode();
      if (BtnVal != 0) hash ^= BtnVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BtnType != global::RemotePadDriver.PadBtn.A) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BtnType);
      }
      if (BtnVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BtnVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BtnType != global::RemotePadDriver.PadBtn.A) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BtnType);
      }
      if (BtnVal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BtnVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BtnType != global::RemotePadDriver.PadBtn.A) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BtnType);
      }
      if (BtnVal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BtnVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PadBtnData other) {
      if (other == null) {
        return;
      }
      if (other.BtnType != global::RemotePadDriver.PadBtn.A) {
        BtnType = other.BtnType;
      }
      if (other.BtnVal != 0) {
        BtnVal = other.BtnVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BtnType = (global::RemotePadDriver.PadBtn) input.ReadEnum();
            break;
          }
          case 16: {
            BtnVal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BtnType = (global::RemotePadDriver.PadBtn) input.ReadEnum();
            break;
          }
          case 16: {
            BtnVal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
